import camion.*
import cosas.*

test "camion carga y descarga" {
    camion.cargar(bumblebee)
    assert.equals(1, camion.cosas().size())
    camion.cargar(knightRider)
    assert.equals(2, camion.cosas().size())
    camion.descargar(bumblebee)
    assert.equals(1, camion.cosas().size())
    assert.throwsException({ camion.cargar(knightRider) }) // deberia fallar
    assert.throwsException({ camion.descargar(bumblebee) }) // deberia fallar
}

test "camion todo peso par"{
    arenaAGranel.pesoA(50)
    camion.cargar(arenaAGranel)
    camion.cargar(bumblebee)
    assert.equals(true, camion.todoPesoParEn(camion.cosas()))
    arenaAGranel.pesoA(51)
    assert.equals(false, camion.todoPesoParEn(camion.cosas()))
}

test "Hay alguno que pesa"{
    arenaAGranel.pesoA(50)
    camion.cargar(arenaAGranel)
    camion.cargar(bumblebee)
    assert.equals(true, camion.tieneCargaConPeso(50))
    assert.equals(false, camion.tieneCargaConPeso(51))
    assert.equals(true, camion.tieneCargaConPeso(800))
}

test "Peso y exceso de peso"{
    paqueteLadrillos.cantidadLadrillosA(300)
    camion.cargar(paqueteLadrillos)
    camion.cargar(bumblebee)
    assert.equals(2400, camion.pesoTotal())
    assert.equals(false, camion.excesoDePeso())
}

test "El de nivel"{
    camion.cargar(bumblebee)
    camion.cargar(bateriaAntiaerea)
    camion.cargar(residuosRadiactivos)
    assert.equals(#{bumblebee}, camion.tieneCargaConPeligrosidad(bumblebee.nivelPeligrosidad()))
    assert.equals(#{bateriaAntiaerea}, camion.tieneCargaConPeligrosidad(bateriaAntiaerea.nivelPeligrosidad()))
    assert.equals(#{residuosRadiactivos}, camion.tieneCargaConPeligrosidad(residuosRadiactivos.nivelPeligrosidad()))

}

test "Cosas peligrosas"{
    bateriaAntiaerea.activarMisiles(true)
    camion.cargar(bateriaAntiaerea)
    camion.cargar(knightRider)
    assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(15))
    assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueOtraCosa(bumblebee))
    assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(2))
    assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQueOtraCosa(paqueteLadrillos))
    assert.equals(#{}, camion.cosasMasPeligrosasQue(200))
    assert.equals(#{}, camion.cosasMasPeligrosasQueOtraCosa(residuosRadiactivos))

}

test "Puede circular en ruta"{
    camion.cargar(bumblebee)
    paqueteLadrillos.cantidadLadrillosA(300)
    camion.cargar(paqueteLadrillos)
    assert.equals(true, camion.puedeCircularEnRutaNivel(20))
    paqueteLadrillos.cantidadLadrillosA(400)
    assert.equals(false, camion.puedeCircularEnRutaNivel(20))
    bumblebee.seTransforma(true)
    paqueteLadrillos.cantidadLadrillosA(300)
    assert.equals(false, camion.puedeCircularEnRutaNivel(20))
}

test "mas cosas"{
    assert.equals(100, contenedorPortuario.peso())
    assert.equals(0, contenedorPortuario.nivelPeligrosidad())
    contenedorPortuario.cargar(knightRider)
    arenaAGranel.pesoA(50)
    contenedorPortuario.cargar(arenaAGranel)
    assert.equals(650, contenedorPortuario.peso())
    assert.equals(10, contenedorPortuario.nivelPeligrosidad())

    embalaje.embalar(knightRider)
    assert.equals(500, embalaje.peso())
    assert.equals(5, embalaje.nivelPeligrosidad())
    embalaje.embalar(bumblebee)
    assert.equals(800, embalaje.peso())
    assert.equals(7.5, embalaje.nivelPeligrosidad())
}

test "Tiene algo que pesa entre dos valores"{
    camion.cargar(bumblebee)
    paqueteLadrillos.cantidadLadrillosA(300)
    camion.cargar(paqueteLadrillos)
    assert.equals(true, camion.tieneAlgunaCargaEntre(5,100)) //enunciado incorrecto, devuelve false 
    assert.equals(true, camion.tieneAlgunaCargaEntre(5,1000))
    assert.equals(false, camion.tieneAlgunaCargaEntre(900,1000))
}
